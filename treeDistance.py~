# Editted off of https://github.com/timtadh/zhang-shasha

# tree.label()
# tree[i] is child i

import zss

from nltk.tree import *

try:
    from editdist import distance as strdist
except ImportError:
    def strdist(a, b):
        if a == b:
            return 0
        else:
            return 1

class ottawaTree(object):

    @staticmethod
    def get_children(tree):
        return [branch for branch in tree]

    @staticmethod
    def get_label(tree):
        return node.label()


    def addkid(self, branch, before=False):
        if before:  
            self.insert(0, branch)
        else:   
            self.append(branch)
        return self


A = Tree.fromstring('(ROOT (S (NP (PRP I)) (VP (MD would) (VP (VB have) (VP (VBN been) (ADJP (RB as) (JJ great)) (PP (IN as) (NP (NP (NNP George) (NNP Eliot)) (ADVP (CC But)))) (PP (IN for) (NP (DT an) (JJ untoward) (NN fate)))))) (. .)))')

B = Tree.fromstring('(ROOT (S (S (VP (VB Hear) (NP (PRP me)) (, ,) (NP (JJ ambitious) (NNS souls)))) (, ,) (NP (NN Sex)) (VP (VBZ is) (NP (NP (DT the) (NN curse)) (PP (IN of) (NP (NN life))))) (. !)))')

#dist = zss.simple_distance(A, B, get_children, get_label, POS_difference)
dist = zss.simple_distance(A, B, ottawaTree.get_children, ottawaTree.get_label)

print dist
#assert dist == 20
